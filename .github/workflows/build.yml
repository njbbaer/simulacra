name: build

on:
  push:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install uv
      run: pip install uv

    - name: Install dependencies
      run: uv sync --frozen

    - name: Run tests
      run: uv run pytest --cov-report=xml --cov=src

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      with:
        fail_ci_if_error: false
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  lint:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install uv
      run: pip install uv

    - name: Install dependencies
      run: uv sync --frozen

    - name: Run pre-commit hooks
      run: uv run pre-commit run --all-files

  release:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1

  publish:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to GHCR
        run: echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build Docker image
        run: docker build -t ghcr.io/${{ github.repository }}:${{ github.ref_name }} .

      - name: Tag image as latest
        run: docker tag ghcr.io/${{ github.repository }}:${{ github.ref_name }} ghcr.io/${{ github.repository }}:latest

      - name: Push versioned tag to GHCR
        run: docker push ghcr.io/${{ github.repository }}:${{ github.ref_name }}

      - name: Push latest tag to GHCR
        run: docker push ghcr.io/${{ github.repository }}:latest

  deploy:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: publish
    runs-on: self-hosted
    steps:
      - name: Deploy new version
        run: |
          cd /opt/homeworld
          docker compose pull simulacra
          docker compose up -d simulacra
